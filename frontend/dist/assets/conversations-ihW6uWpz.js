import{g as i,J as b,d as v,c as p}from"./main-DJ_tSYHB.js";const u={async fetchConversations(){return(await i.get("/conversations/")).data.results},async fetchConversationsForPerson(e){if(!e)return console.warn("fetchConversationsForPerson called with empty personId"),[];const o=await i.get(`/conversations/?participant=${e}`),s=o.data.results||o.data||[];return console.log(`Fetched ${s.length} conversations for person ${e}`),s},async fetchConversationById(e){return(await i.get(`/conversations/${e}/`)).data},async createConversation(e){return(await i.post("/conversations/",e)).data},async updateConversation(e,o){return(await i.put(`/conversations/${e}/`,o)).data},async deleteConversation(e){await i.delete(`/conversations/${e}/`)}},w=[{label:"In Person",value:"in_person",icon:"people"},{label:"Phone Call",value:"phone",icon:"phone"},{label:"Text Message",value:"text",icon:"sms"},{label:"Email",value:"email",icon:"email"},{label:"Video Call",value:"video",icon:"videocam"},{label:"Other",value:"other",icon:"chat"}],O=e=>w.find(s=>s.value===e)?.icon||"chat",A=e=>w.find(s=>s.value===e)?.label||"Other",V=b("conversations",()=>{const e=v([]),o=v(null),s=v(!1),f=v(!1),h=v(null),d=v(null),g=300*1e3,y=p(()=>d.value?Date.now()-d.value<g:!1),F=p(()=>e.value),m=p(()=>e.value.length),a=t=>{s.value=t,t&&(f.value=!1,h.value=null)},l=t=>{f.value=!0,h.value=t,s.value=!1},c=()=>{f.value=!1,h.value=null};return{conversations:e,selectedConversation:o,isLoading:s,hasError:f,error:h,getConversationsList:F,conversationsCount:m,isCacheValid:y,fetchConversations:async(t=!1)=>{if(!t&&y.value&&e.value.length>0)return e.value;a(!0),c();try{const n=await u.fetchConversations();return e.value=n,d.value=Date.now(),n}catch(n){throw console.error("Failed to fetch conversations:",n),l("Failed to load conversations"),n}finally{a(!1)}},fetchConversationsForPerson:async t=>{a(!0),c();try{return await u.fetchConversationsForPerson(t)}catch(n){throw console.error("Failed to fetch conversations for person:",n),l("Failed to load conversations"),n}finally{a(!1)}},fetchConversationById:async t=>{a(!0),c();try{const n=await u.fetchConversationById(t);o.value=n;const r=e.value.findIndex(C=>C.id===t);return r>=0&&(e.value[r]=n),n}catch(n){throw console.error("Failed to fetch conversation:",n),l("Failed to load conversation details"),n}finally{a(!1)}},createConversation:async t=>{a(!0),c();try{const n=await u.createConversation(t);return e.value.unshift(n),d.value=Date.now(),n}catch(n){throw console.error("Failed to create conversation:",n),l("Failed to create conversation"),n}finally{a(!1)}},updateConversation:async(t,n)=>{a(!0),c();try{const r=await u.updateConversation(t,n),C=e.value.findIndex(I=>I.id===t);return C>=0&&(e.value[C]=r),o.value?.id===t&&(o.value=r),r}catch(r){throw console.error("Failed to update conversation:",r),l("Failed to update conversation"),r}finally{a(!1)}},deleteConversation:async t=>{a(!0),c();try{await u.deleteConversation(t),e.value=e.value.filter(n=>n.id!==t),o.value?.id===t&&(o.value=null)}catch(n){throw console.error("Failed to delete conversation:",n),l("Failed to delete conversation"),n}finally{a(!1)}},clearSelectedConversation:()=>{o.value=null},invalidateCache:()=>{d.value=null}}});export{A as a,w as c,O as g,V as u};
