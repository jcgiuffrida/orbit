import{g as p,J as I,d as u,c as h}from"./main-voVUH4hk.js";const i={async fetchContactAttempts(){return(await p.get("/contact-attempts/")).data.results},async fetchContactAttemptsForPerson(e){return(await p.get(`/contact-attempts/?person=${e}`)).data.results},async fetchContactAttemptById(e){return(await p.get(`/contact-attempts/${e}/`)).data},async createContactAttempt(e){return(await p.post("/contact-attempts/",e)).data},async updateContactAttempt(e,c){return(await p.put(`/contact-attempts/${e}/`,c)).data},async deleteContactAttempt(e){await p.delete(`/contact-attempts/${e}/`)}},A=[{label:"Text Message",value:"text",icon:"sms"},{label:"Email",value:"email",icon:"email"},{label:"Phone Call",value:"call",icon:"phone"},{label:"Social Media",value:"social",icon:"share"},{label:"Other",value:"other",icon:"contact_phone"}],$=e=>A.find(s=>s.value===e)?.icon||"contact_phone",O=e=>A.find(s=>s.value===e)?.label||"Other",_=I("contactAttempts",()=>{const e=u([]),c=u(null),s=u(!1),m=u(!1),f=u(null),d=u(null),y=300*1e3,v=h(()=>d.value?Date.now()-d.value<y:!1),w=h(()=>e.value),g=h(()=>e.value.length),n=a=>{s.value=a,a&&(m.value=!1,f.value=null)},l=a=>{m.value=!0,f.value=a,s.value=!1},r=()=>{m.value=!1,f.value=null};return{contactAttempts:e,selectedContactAttempt:c,isLoading:s,hasError:m,error:f,getContactAttemptsList:w,contactAttemptsCount:g,isCacheValid:v,fetchContactAttempts:async(a=!1)=>{if(!a&&v.value&&e.value.length>0)return e.value;n(!0),r();try{const t=await i.fetchContactAttempts();return e.value=t,d.value=Date.now(),t}catch(t){throw console.error("Failed to fetch contact attempts:",t),l("Failed to load contact attempts"),t}finally{n(!1)}},fetchContactAttemptsForPerson:async a=>{n(!0),r();try{return await i.fetchContactAttemptsForPerson(a)}catch(t){throw console.error("Failed to fetch contact attempts for person:",t),l("Failed to load contact attempts"),t}finally{n(!1)}},fetchContactAttemptById:async a=>{n(!0),r();try{const t=await i.fetchContactAttemptById(a);c.value=t;const o=e.value.findIndex(C=>C.id===a);return o>=0&&(e.value[o]=t),t}catch(t){throw console.error("Failed to fetch contact attempt:",t),l("Failed to load contact attempt details"),t}finally{n(!1)}},createContactAttempt:async a=>{n(!0),r();try{const t=await i.createContactAttempt(a);return e.value.unshift(t),d.value=Date.now(),t}catch(t){throw console.error("Failed to create contact attempt:",t),l("Failed to create contact attempt"),t}finally{n(!1)}},updateContactAttempt:async(a,t)=>{n(!0),r();try{const o=await i.updateContactAttempt(a,t),C=e.value.findIndex(F=>F.id===a);return C>=0&&(e.value[C]=o),c.value?.id===a&&(c.value=o),o}catch(o){throw console.error("Failed to update contact attempt:",o),l("Failed to update contact attempt"),o}finally{n(!1)}},deleteContactAttempt:async a=>{n(!0),r();try{await i.deleteContactAttempt(a),e.value=e.value.filter(t=>t.id!==a),c.value?.id===a&&(c.value=null)}catch(t){throw console.error("Failed to delete contact attempt:",t),l("Failed to delete contact attempt"),t}finally{n(!1)}},clearSelectedContactAttempt:()=>{c.value=null},invalidateCache:()=>{d.value=null}}});export{$ as a,A as c,O as g,_ as u};
